services:
  profile.api:
    image: ${DOCKER_REGISTRY-}profileapi
    build:
      context: .
      dockerfile: src/backend/ProfileService/Profile.Api/Dockerfile

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management

  redis:
    image: redis:latest
    
  otel-collector:
    image: otel/opentelemetry-collector:latest
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    command: [ "--config=/etc/otel/config.yaml" ]
    volumes:
      - "./otel-config.yaml:/etc/otel/config.yaml"
    networks:
      - backend
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686" # UI Jaeger
      - "14268:14268" # OTLP endpoint
    networks:
      - backend

  prometheus:
     image: prom/prometheus:latest
     container_name: prometheus
     volumes:
       - ./prometheus.yml:/etc/prometheus/prometheus.yml
     ports:
       - "9090:9090"
     networks:
       - backend

  grafana:
     image: grafana/grafana:latest
     container_name: grafana
     ports:
       - "3000:3000"
     depends_on:
       - prometheus
     networks:
       - backend
  
  
  
  career.api:
    image: ${DOCKER_REGISTRY-}careerapi
    build:
      context: .
      dockerfile: src/backend/CareerService/Career.Api/Dockerfile

volumes:
  sqlserverData:
  redis_data:
  geoip_data:

networks:
  backend:
    
